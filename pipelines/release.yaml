# super useless change
trigger: none

resources:
  pipelines:
  - pipeline: build   # Name of the pipeline resource
    source: 'MyBeerCellar.API - Build' # Name of the pipeline referenced by the pipeline resource

variables:
  skipComponentGovernanceDetection: true
  pool: 'ubuntu-latest'
  azure-sub-dev: 'AIRS'
  azure-sub-prod: 'MSDN'
  location: 'eastus'
  infrastructure-arm-template: '$(Pipeline.Workspace)/build/Infrastructure/mybeercellar-api.json'

stages:
 - stage: Development
   displayName: 'Dev Release Stage'
   variables:
   - group: 'Development Variables'
   - name: 'resource-group'
     value: 'mybeercellar'
   - name: 'appName'
     value: 'mybeercellar-api-dev'
   - name: 'keyVaultName'
     value: 'mybrewcellar-vault-dev'
   - name: 'environmentSuffix'
     value: 'dev'
   jobs:
   - deployment: 'Deploy'
     environment: 'Development'
     pool:
       vmImage: $(pool)
     strategy:
      runOnce:
        deploy:
         steps:
           - task: Bash@3
             displayName: 'ws dir'
             inputs:
               script: 'ls -al $(Pipeline.Workspace)/'

           - task: Bash@3
             displayName: 'build dir'
             inputs:
               script: 'ls -al $(Pipeline.Workspace)/build/'
           - task: AzureResourceGroupDeployment@2
             displayName: 'Deploy Infrastructure'
             inputs:
                azureSubscription: $(azure-sub-dev)
                csmFile: $(infrastructure-arm-template)
                resourceGroupName: $(resource-group)
                location: $(location)
                overrideParameters: '-webAppName $(appName) -tenantId $(tenantId) -keyVaultName $(keyVaultName) -tenantId $(tenantId) -ownerObjectId $(ownerObjectId) -sqlAdminLogin $(sqlAdminLogin) -sqlAdminPassword $(sqlAdminPassword) -environmentSuffix $(environmentSuffix)'

           - task: Bash@3
             displayName: 'build dir'
             inputs:
               script: 'ls -al $(Pipeline.Workspace)/build/'

           - task: Bash@3
             displayName: 'build code'
             inputs:
               script: 'ls -al $(Pipeline.Workspace)/build/code'

           - task: AzureRmWebAppDeployment@4
             displayName: 'Deploy API code'
             inputs:
               ConnectionType: 'AzureRM'
               azureSubscription: 'AIRS'
               appType: 'webAppLinux'
               WebAppName: 'mybeercellar-api-dev'
               packageForLinux: '$(Pipeline.Workspace)/build/code/*.zip'
               RuntimeStack: 'DOTNETCORE|3.1'

 - stage: Production
   displayName: 'Production Release Stage'
   variables:
   - group: 'Production Variables'
   - name: 'resource-group'
     value: 'my-beer-cellar-prod'
   - name: 'appName'
     value: 'mybrewcellar-api-prod'
   - name: 'keyVaultName'
     value: 'mybrewcellar-vault-prod'
   - name: 'environmentSuffix'
     value: 'prod'     
   jobs:
   - deployment: 'Deploy'
     environment: 'Production'
     pool:
       vmImage: $(pool)
     strategy:
      runOnce:
        deploy:
          steps:
           - task: AzureResourceGroupDeployment@2
             displayName: 'Deploy Infrastructure'
             inputs:
               azureSubscription: $(azure-sub-prod)
               csmFile: $(infrastructure-arm-template)
               resourceGroupName: $(resource-group)
               location: $(location)
               overrideParameters: '-webAppName $(appName) -tenantId $(tenantId) -keyVaultName $(keyVaultName) -tenantId $(tenantId) -ownerObjectId $(ownerObjectId) -sqlAdminLogin $(sqlAdminLogin) -sqlAdminPassword $(sqlAdminPassword) -environmentSuffix $(environmentSuffix)'

           - task: AzureRmWebAppDeployment@4
             displayName: 'Deploy API code'
             inputs:
               ConnectionType: 'AzureRM'
               azureSubscription: 'AIRS'
               appType: 'webAppLinux'
               WebAppName: 'mybeercellar-api-dev'
               packageForLinux: '$(Pipeline.Workspace)/build/code/*.zip'
               RuntimeStack: 'DOTNETCORE|3.1'

